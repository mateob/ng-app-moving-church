name: Validate and Release

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - run: npm ci
      # - run: npm run lint  # Execute seus testes de linting
      # - run: npm run test  # Execute seus testes unitários e de integração

  release:
    needs: validate
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Buscar todo o histórico para gerar a versão corretamente
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - run: npm ci
      - name: Gerar versão
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            const semanticRelease = require('semantic-release');

            // Configurar o semantic-release (ver abaixo)
            const result = await semanticRelease({
              // ... suas configurações
            });

            if (result && result.nextRelease) {
              console.log(`Nova versão: ${result.nextRelease.version}`);
              // Definir a variável de saída com a nova versão
              core.setOutput('NEW_VERSION', result.nextRelease.version);
            } else {
              console.log('Nenhuma nova versão gerada.');
            }
      - name: Criar branch de release
        run: |
          git checkout -b release/v${{ steps.release.outputs.NEW_VERSION }}
          git push origin release/v${{ steps.release.outputs.NEW_VERSION }}
      - name: Abrir Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Release v${{ steps.release.outputs.NEW_VERSION }}',
              head: 'release/v${{ steps.release.outputs.NEW_VERSION }}',
              base: 'main',  # ou 'master' se for o seu branch principal
              body: 'Pull Request automático para a versão ${{ steps.release.outputs.NEW_VERSION }} gerada a partir da branch develop.'
            });
